# Define your Tenable API accessKey and secretKey

$accessKey = "{AccessKey}"

$secretKey = "{secretKey}"


# headers for API key/requests

$headers = @{

    "X-ApiKeys" = "accessKey=$accessKey;secretKey=$secretKey"

   "Content-Type" = "application/json"

}

 
# Find the scanId or go to ./scanIdScript to identify the scan number

$scanId = "{ScanId}"


# Define the Tenable API endpoint for the scan history

$apiUrl = "https://cloud.tenable.com/scans/$scanId"

 

# Make the API request to get the scan history

$response = Invoke-RestMethod -Uri $apiUrl -Method Get -Headers $headers

 

#if response noot null -> extract data

if ($response) {
#Counts to add each number

$countCritical = 0

$countHigh = 0

$countMedium = 0

$countLow = 0

$countInfo = 0

    #Extracting all data from hosts

    $hostsItems = $response.hosts | ForEach-Object {

        [PSCustomObject]@{

            ScanId    = $_.scan_id

            HostId    = $_.host_id

            HistoryId = $_.history_id

            Status    = $_.status

            ScanType  = $_.scan_type

            Critical  = $_.critical

            High      = $_.high

            Medium    = $_.medium

            Low       = $_.low

            Info      = $_.info

        }

    }

   

    for ( $i = 0; $i -lt $hostsItems.Count; $i++){

    $countCritical += $hostsItems[$i].Critical

    $countHigh += $hostsItems[$i].High

    $countMedium += $hostsItems[$i].Medium

    $countLow += $hostsItems[$i].Low

    $countInfo += $hostsItems[$i].Info

    }

 

    #Output the results

    $hostsItems | Format-Table -AutoSize

}
Write-Host $countCritical
Write-Host $countMedium
Write-Host $countLow
Write-Host $countInfo
